---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - status
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - name
              - status
  "/api/v1/users/{id}/posts":
    get:
      summary: Retrieves posts for a user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Users posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  password:
                    type: string
                required:
                - id
                - name
                - status
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  password:
                    type: string
                required:
                - id
                - name
                - status
        '404':
          description: User not found
  "/api/v1/users/{user_id}/posts/{post_id}/commnets":
    get:
      summary: Retrieves Post commnets
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Post comments
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  post_id:
                    type: integer
                  email:
                    type: string
                  password:
                    type: string
                required:
                - user_id
                - post_id
                - status
            application/xml:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  post_id:
                    type: integer
                  email:
                    type: string
                  password:
                    type: string
                required:
                - user_id
                - post_id
                - status
        '404':
          description: Post not found
    post:
      summary: Creates a Post commnet
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: comment created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - text
              - status
          application/xml:
            schema:
              type: object
              properties:
                text:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - text
              - status
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
